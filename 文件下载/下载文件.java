public File writeToSDFromInput(String path, String fileName,InputStream input) {File file = null;private int FILESIZE = 128;// OutputStream output = null;FileOutputStream output = null;try {File fileExit = new File(getSDCardPath() + path);if (!fileExit.exists()) {fileExit.mkdirs();}System.out.println(path + fileName + "**********");file = createSDFile(getSDCardPath() + path + fileName);output = new FileOutputStream(file);byte[] buffer = new byte[FILESIZE];do {int numread = input.read(buffer);if (numread <= 0) {break;}output.write(buffer, 0, numread);} while (true);output.flush();} catch (Exception e) {e.printStackTrace();} finally {try {output.close();} catch (IOException e) {e.printStackTrace();}}return file;}URL myURL = new URL(strPath);     URLConnection conn = myURL.openConnection();     conn.connect();     InputStream is = conn.getInputStream();     if(is==null){     throw new RuntimeException("stream is null");     }     File myTempFile = File.createTempFile(fileNa, "."+fileEx);     currentTempFilePath = myTempFile.getAbsolutePath();     FileOutputStream fos = new FileOutputStream(myTempFile);     byte buf[] = new byte[128];     do{     int numread = is.read(buf);     if(numread <= 0){     break;     }     fos.write(buf,0,numread);     }while(true);     System.out.println("last");     openFile(myTempFile);     try{     is.close();     }catch(Exception e){     Log.e(TAG, "error:"+e.getMessage(), e);     }